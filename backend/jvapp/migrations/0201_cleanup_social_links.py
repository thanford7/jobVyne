# Generated by Django 4.2.1 on 2023-07-09 17:47

from django.db import migrations, models
import django.db.models.deletion

from jvapp.models.social import SocialLink


def cleanup_social_links(apps, schema_editor):
    social_links = SocialLink.objects\
        .prefetch_related('job_subscriptions')\
        .all()
    
    # related models
    social_post_model = apps.get_model('jvapp', 'SocialPost')
    job_application_model = apps.get_model('jvapp', 'JobApplication')
    page_view_model = apps.get_model('jvapp', 'PageView')

    combined_social_links = {}
    delete_social_link_ids = []
    update_social_posts = []
    update_job_applications = []
    update_page_views = []
    for social_link in social_links:
        existing_social_link = combined_social_links.get(social_link.unique_key)
        if existing_social_link:
            delete_social_link_ids.append(social_link.id)
            
            social_posts = social_post_model.objects.filter(social_link_id=social_link.id)
            for post in social_posts:
                post.social_link_id = existing_social_link.id
                update_social_posts.append(post)
                
            job_apps = job_application_model.objects.filter(social_link_id=social_link.id)
            for job_app in job_apps:
                job_app.social_link_id = existing_social_link.id
                update_job_applications.append(job_app)
                
            page_views = page_view_model.objects.filter(social_link_id=social_link.id)
            for page_view in page_views:
                page_view.social_link_id = existing_social_link.id
                update_page_views.append(page_view)
        else:
            combined_social_links[social_link.unique_key] = social_link
    
    social_post_model.objects.bulk_update(update_social_posts, ['social_link_id'])
    job_application_model.objects.bulk_update(update_job_applications, ['social_link_id'])
    page_view_model.objects.bulk_update(update_page_views, ['social_link_id'])
    SocialLink.objects.filter(id__in=delete_social_link_ids).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('jvapp', '0200_rename_referrer_jobapplication_referrer_user_and_more'),
    ]

    operations = [
        migrations.RunPython(cleanup_social_links),
    ]
