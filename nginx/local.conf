user  nginx;
worker_processes  1;

events {
  worker_connections  1024;
}

http {
  include /etc/nginx/mime.types;
  client_max_body_size 100m;

  upstream backend {
    server backend:8000;
  }

  upstream frontend {
    server frontend:9000;
  }
  
  server {
        listen 80;
        server_name localhost;
        charset utf-8;
    
        # frontend urls
        location / {
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
    
            # Not sure if this is needed
            proxy_redirect off;
    
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
    
            proxy_pass http://frontend;
        }
    
        # From https://quasar.dev/quasar-cli-vite/developing-spa/deploying
        location = /robots.txt  { access_log off; log_not_found off; }
    
        access_log off;
        error_log  /var/log/nginx/jv-server-error.log debug;
    
#         location ~ /\.(?!well-known).* {
#             deny all;
#         }
    
        # static files
        # location /static {
        #   autoindex on;
        #   alias /usr/src/app/static;
        # }
    
        # frontend dev-server
        location /sockjs-node {
          proxy_redirect off;
          proxy_pass http://frontend;
          proxy_set_header X-Real-IP  $remote_addr;
          proxy_set_header X-Forwarded-For $remote_addr;
          proxy_set_header Host $host;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
        }
    
        # backend urls
        location ~ ^/(admin|api|media|static) {
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
    
            # Not sure if this is needed
            proxy_redirect off;
    
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # do not pass the CORS header from the response of the proxied server to the client
#             proxy_hide_header 'Access-Control-Allow-Origin';

#             add_header 'Access-Control-Allow-Origin' "$http_origin" always;
#             add_header 'Access-Control-Allow-Credentials' 'true' always;
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
#             add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;

            proxy_pass http://backend;
        }
    }
}

